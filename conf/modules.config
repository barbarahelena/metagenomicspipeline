/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'symlink',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEETCHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withLabel: 'metaphlan' {
        conda      = 'bioconda::metaphlan=4.1.1'
        container  = 'biocontainers/metaphlan:4.1.1--pyhdfd78af_0'
    }

    withLabel: 'metaphlan_publish' {
        publishDir = [
            path: { "${params.outdir}/metaphlan" },
            mode: 'copy'
        ]
    }

    withLabel: 'humann' {
        conda      = 'humann==3.9'
        container  = 'biocontainers/humann:3.9--py312hdfd78af_0'
    }

    withLabel: 'humann_publish' {
        publishDir = [
            path: { "${params.outdir}/humann" },
            mode: 'copy'
        ]
    }

    withLabel: 'bowtie2' {
        conda      = 'bioconda::bowtie2=2.5.2 bioconda::samtools=1.18 conda-forge::pigz=2.6'
        container  = 'biocontainers/mulled-v2-ac74a7f02cebcfcc07d8e8d1d750af9c83b4d45a:f70b31a2db15c023d641c32f433fb02cd04df5a6-0'
        publishDir = [
            path: { "${params.outdir}/bowtie2" },
            mode: "${params.publish_mergedreads}"
        ]
    }

    withLabel: 'seqkit' {
        cpus       = 4
        memory     = 4.GB
        time       = 1.h
        conda      = 'bioconda::seqkit=2.6.1'
        container  = 'biocontainers/seqkit:2.7.0--h9ee0642_0'
         publishDir = [
            path: { "${params.outdir}/subsampling" },
            mode: "copy",
            pattern: '*_readcount.txt'
        ]
    }

    withName: 'CAT_READCOUNTS' {
        conda = 'bioconda::awk'
        container = { 
            if (workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container) {
                'https://depot.galaxyproject.org/singularity/ubuntu:22.04'
            } else {
                'nf-core/ubuntu:22.04'
            } 
        }
        publishDir = [
            path: { "${params.outdir}/subsampling" },
            mode: "copy",
            pattern: '*.csv'
        ]
    }

    withLabel: 'fastp' {
        conda      = 'bioconda::fastp=0.23.4'
        container  = 'biocontainers/fastp:0.23.4--h5f740d0_0'
        publishDir = [
            path: { "${params.outdir}/fastp" },
            mode: "copy",
            pattern: '*.log'
        ]
    }
    
    withLabel: 'python' {
        conda      = 'conda-forge::python=3.8.3'
        container  = 'biocontainers/python:3.8.3'
    }

    withLabel: 'shortbred' {
        conda      = 'biobakery::shortbred=0.9.3'
        container  = 'biobakery/shortbred'
    }

    withName: 'KRAKEN2_KRAKEN2' {
        conda      = 'bioconda::kraken2=2.1.3 coreutils=9.4'
        container  = 'biocontainers/kraken2:2.1.3--pl5321hdcf5f25_3'
    }

    withName: 'KRAKEN2_DB'  {
        conda      = 'conda-forge::wget=1.20.3 conda-forge::tar=1.34'
        container  = 'biocontainers/wget:1.21.4'
    }

    withName: 'BRACKEN_BUILD|BRACKEN_BRACKEN|BRACKEN_COMBINEBRACKENOUTPUTS' {
        conda      = 'bioconda::bracken=2.9.0'
        container  = 'biocontainers/bracken:2.9--py38h2494328_0'
    }

    withName: 'BRACKEN_BRACKEN|BRACKEN_COMBINEBRACKENOUTPUTS|BRACKEN_COMBINEKRAKENOUTPUTS' {
        publishDir = [
            path: { "${params.outdir}/bracken" },
            mode: "copy"
        ]
    }

    withLabel: 'shortbred_publish' {
        publishDir = [
            path: { "${params.outdir}/shortbred" },
            mode: 'copy'
        ]
    }

    withLabel: 'cat' {
        publishDir = [
                path: { "${params.outdir}/merged" },
                mode: "${params.publish_mergedreads}"
            ]
    }

}

